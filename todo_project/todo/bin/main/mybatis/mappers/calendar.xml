<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="calendar">
    <select id="getCalendarInfo" parameterType="String" resultType="scheduledto">
        <![CDATA[
        select 
        	tp.id prjId,
	        tp.title prjTitle, 
            ttsp.task_id id, 
            ttsp.title title, 
            ttsp.start_date startDate, 
            ttsp.end_date endDate, 
            ttsp.reg_date regDate, 
            ttsp.state state, 
            ttsp.use_public usePublic
        from tb_task_super ttsp, tb_project tp
        where(ttsp.project_id = tp.id) 
        and ttsp.task_id in (
                    select ttsp.task_id from tb_task_super ttsp where ttsp.project_id in (
                    select tp.id from tb_project tp where tp.id in (select project_id from tb_member  where user_id=#{userId})))
    ]]>
    </select>
    <select id="getCalendarFilterInfo" parameterType="map" resultType="scheduledto">
    select
            ttsp.project_id prjId, 
            tp.title prjTitle,
            ttsp.task_id id, 
            ttsp.title title, 
            ttsp.start_date startDate, 
            ttsp.end_date endDate, 
            ttsp.reg_date regDate, 
            ttsp.state state, 
            ttsp.use_public usePublic
        from tb_task_super ttsp, tb_project tp
        where (ttsp.project_id = tp.id) 
        and ttsp.task_id in (
                    select ttsp.task_id from tb_task_super ttsp where ttsp.project_id in (
                    select tp.id from tb_project tp where tp.id in (select project_id from tb_member  where user_id=#{userId})))
        <if test="prjItem">
        and 
            <foreach open="(" close=")" collection="prjItem" item="pitem" index="index" separator="or">
        ttsp.project_id =#{pitem} 
            </foreach>
        </if>
        <if test="memItem">
       and
            <foreach open="(" close=")" collection="memItem" item="mitem" index="index" separator="or">
        ttsp.task_id in (select task_id from tb_task_manager where member_no in (select member_no from tb_member where user_id=#{mitem}))
            </foreach>
        </if>
        <if test='uItem == "true" or uItem =="false"'>
        and 
        ttsp.use_public = #{uItem}::boolean
        and tp.use_public=#{uItem}::boolean
        </if>
    </select>
    <select id="getProjects" parameterType="String" resultType="map">
        <![CDATA[
        select tp.id prjId, tp.title prjTitle
        from tb_project tp 
        where tp.id in (select project_id from tb_member  where user_id=#{userId});
    ]]>
    </select>
    <select id="getSuperTasks" parameterType="chkprjdto" resultType="chkstdto">
        <![CDATA[
        select task_id pId, title pTitle
        from tb_task_super tts
        where project_id = (select project_id from tb_member  where user_id=#{id} and project_id=#{chkProject});
    ]]>
    </select>
    <select id="getChkProjectInfo" parameterType="chkprjdto" resultType="map">
        <![CDATA[
    select member_no, project_id 
    from tb_member tm 
    where user_id = #{id} and tm.project_id = #{chkProject};
    ]]>
    </select>
    <select id="getLastSortNo" parameterType="String" resultType="String">
        <![CDATA[
    select max(sort_no) from tb_task_sub tts where task_super_id = #{chkProject};
    ]]>
    </select>
    <select id="getLabelList" resultType="labelvo">
        <![CDATA[
		select *
		from tb_label tl
		where tl.project_id = #{pid}
	]]>
    </select>
    <select id="getClickDateList" parameterType="cddto" resultType="cddetialdto">
        <![CDATA[
    select 
        distinct 
        tp.id prjId, 
        tp.title prjTitle, 
        ttsp.task_id pId, 
        ttsp.title pTitle, 
        ttsp.start_date pStartDate, 
        ttsp.end_date pEndDate, 
        ttsp.state pState, 
        ttsp.use_public pUsePublic
    from tb_task_super ttsp, tb_project tp
    where (ttsp.project_id = tp.id) 
    and (#{clickDate} between ttsp.start_date and ttsp.end_date)
    and (ttsp.task_id in (
                select ttsp.task_id from tb_task_super ttsp where ttsp.project_id in (
                select tp.id from tb_project tp where tp.id in (select project_id from tb_member  where user_id=#{id}))))
    ]]>
    </select>
    <select id="getClickDateFilterList" parameterType="map" resultType="cddetialdto">
        select 
            distinct 
            tp.id prjId, 
            tp.title prjTitle, 
            ttsp.task_id pId, 
            ttsp.title pTitle, 
            ttsp.start_date pStartDate, 
            ttsp.end_date pEndDate, 
            ttsp.state pState, 
            ttsp.use_public pUsePublic
        from tb_task_super ttsp, tb_project tp
        where (ttsp.project_id = tp.id) 
        and (#{clickDate} between ttsp.start_date and ttsp.end_date)
        and (ttsp.task_id in (
                    select ttsp.task_id from tb_task_super ttsp where ttsp.project_id in (
                    select tp.id from tb_project tp where tp.id in (select project_id from tb_member  where user_id=#{userId}))))
        <if test="prjItem">
        and 
            <foreach open="(" close=")" collection="prjItem" item="pitem" index="index" separator="or">
        ttsp.project_id =#{pitem}
            </foreach>
        </if>
        <if test="memItem">
       and
            <foreach open="(" close=")" collection="memItem" item="mitem" index="index" separator="or">
        ttsp.task_id in (select task_id from tb_task_manager where member_no in (select member_no from tb_member where user_id=#{mitem}))
            </foreach>
        </if>
        <if test='uItem == "true" or uItem =="false"'>
        and 
        ttsp.use_public = #{uItem}::boolean
        and tp.use_public=#{uItem}::boolean
        </if>
    </select>
    <select id="getSubList" parameterType="String" resultType="cddetialdto">
        <![CDATA[
        SELECT 
           c.prjId, c.prjTitle, c.pId, c.pTitle, c.pStartDate, c.pEndDate, c.pState, c.pUsePublic, c.cId, c.cTitle, c.cStartDate, c.cEndDate, c.reg_date, c.cUsePublic, d.manager_name, d.img_code
        FROM 
        (
	        select a.prjId, a.prjTitle, a.pId, a.pTitle, a.pStartDate, a.pEndDate, a.pState, a.pUsePublic, b.cId, b.cTitle, b.cStartDate, b.cEndDate, b.reg_date, b.cUsePublic
			from 
			(
			select tp.id prjId, tp.title prjTitle, ttsp.task_id pId, ttsp.title pTitle, ttsp.start_date pStartDate, ttsp.end_date pEndDate, ttsp.state pState, ttsp.use_public pUsePublic
			from tb_task_super ttsp , tb_project tp
			where (ttsp.project_id = tp.id)  and ttsp.task_id = #{superId}
			)
			as a left outer join
			(
			select ttsp.task_id pId, tts.task_id cId, tts.title cTitle, tts.start_date cStartDate, tts.end_date cEndDate, tts.reg_date,tts.use_public cUsePublic
			from tb_task_sub tts, tb_task_super ttsp
			where (tts.task_super_id = ttsp.task_id)
			and ttsp.task_id = #{superId}
			)
			AS b
			ON a.pId = b.pId
        )
        AS c left outer join
        (
	        select ttm.task_id cId , json_agg(tu."name") as manager_name, json_agg(tu.img_code) as img_code
	        from tb_task_manager ttm, tb_member tm,tb_user tu, tb_task_sub tts2 
	        where  (ttm.task_id = tts2.task_id) 
	        and (ttm.member_no = tm.member_no)
	        and (tm.user_id = tu.id)
	        group by ttm.task_id
        )
        AS d
        ON c.cId = d.cId
        order by c.reg_date desc
     ]]>
    </select>
    <select id="getFilter" parameterType="String" resultType="filterdto">
        <![CDATA[
        select tp.id prjId, tp.title prjTitle, tu.id userId, tu.name userName 
        from tb_member tm, tb_user tu, tb_project tp 
        where (tp.id = tm.project_id ) and (tm.user_id = tu.id) 
        and project_id in (select project_id from tb_member  where user_id=#{userId});
    ]]>
    </select>

    <insert id="insertFilterItem" parameterType="map">
        <![CDATA[
    insert into tb_filter(filter_no, calendar_setting , user_id ) 
    values(nextval('seq_filter'), #{calItem}, #{userId});
   ]]>
    </insert>

    <update id="updateFilterItem" parameterType="map">
        <![CDATA[
        update tb_filter 
        set calendar_setting = #{calItem} 
        where user_id = #{userId}
   ]]>
    </update>

    <select id="selectFilterItem" parameterType="String" resultType="String">
        <![CDATA[
        select calendar_setting 
        from tb_filter
        where user_id = #{userId}
   ]]>
    </select>

    <select id="selectExistUser" parameterType="String" resultType="String">
        <![CDATA[
        select user_id from tb_filter
        where user_id = #{userId}
   ]]>
    </select>
    <update id="deleteCalSetting" parameterType="String">
        <![CDATA[
       update tb_filter 
       set calendar_setting = ''
       where user_id=#{userId};
    ]]>
    </update>
</mapper>