<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="calendar">
    <select id="getCalendarInfo" parameterType="String" resultType="scheduledto">
    <![CDATA[
    SELECT  
        a.prjId, 
        a.pId, 
	   	a.cId, 
	    a.prjTitle, 
	    a.pTitle, 
	    a.cTitle, 
	    a.pStartDate, 
	    a.pEndDate, 
	    a.pState, 
	    a.pUsePublic, 
	    a.cStartDate, 
	    a.cEndDate, 
	    a.cState, 
	    a.cUsePublic,
	    b.manager_name
    FROM 
        (
        SELECT 
            tp.id prjId, 
            tts.task_id pId, 
            tts2.task_id cId, 
            tp.title prjTitle, 
            tts.title pTitle, 
            tts2.title cTitle, 
            tts.start_date pStartDate, 
            tts.end_date pEndDate, 
            tts.state pState, 
            tts.use_public pUsePublic, 
            tts2.start_date cStartDate, 
            tts2.end_date cEndDate, 
            tts2.state cState, 
            tts2.use_public cUsePublic
        FROM tb_project tp, tb_task_super tts , tb_task_sub tts2 
        WHERE (tp.id=tts.project_id)
        AND (tts.task_id=tts2.task_super_id)
        AND tp.id in (select project_id from tb_member  where user_id=#{userId})
    )
    AS a left outer join
    (
        select ttm.task_id id,  array_to_string(array_agg(tu."name"),',') as manager_name
        from tb_task_manager ttm, tb_member tm,tb_user tu, tb_task_sub tts2 
        where ttm.task_id in (
        select ttm.task_id 
        from tb_task_manager ttm
        where ttm.member_no in (select member_no from tb_member where user_id=#{userId})
        )
        and ttm.task_id = tts2.task_id 
        and ttm.member_no = tm.member_no
        and tm.user_id = tu.id
        group by ttm.task_id
        )
    AS b
    ON (a.cId = b.id or a.pId = b.id);
    ]]>
    </select>
    <select id="getSuperTasks" parameterType="chkprjdto" resultType="chkstdto">
    <![CDATA[
        select task_id pId, title pTitle
        from tb_task_super tts
        where project_id = (select project_id from tb_member  where user_id=#{id} and project_id=#{chkProject});
    ]]>
    </select>
   <select id="getClickDateList" parameterType="cddto" resultType="scheduledto">
    <![CDATA[
       SELECT a.prjId, a.prjTitle, a.pTitle, a.cTitle, a.start_date, a.end_date, a.reg_date, a.state, a.use_public, b.manager_count, b.manager_name
        FROM 
        (
        select tp.id prjId, tts.task_id cId, tp.title prjTitle, ttsp.title pTitle, tts.title cTitle, tts.start_date, tts.end_date, tts.reg_date, tts.state, tts.use_public
        from tb_task_sub tts, tb_task_super ttsp, tb_project tp
        where (tts.task_super_id = ttsp.task_id) and (ttsp.project_id = tp.id) 
        and (#{clickDate} between tts.start_date and tts.end_date)
        and (tts.task_id in (
            select tts.task_id from tb_task_sub tts 
            where tts.task_super_id in (
                    select ttsp.task_id from tb_task_super ttsp where ttsp.project_id in (
                    select tp.id from tb_project tp where tp.id in (select project_id from tb_member  where user_id=#{id})))))
        )
        AS a left outer join
        (
        select ttm.task_id cId ,  count(tu."name") as manager_count, array_to_string(array_agg(tu."name"),',') as manager_name
        from tb_task_manager ttm, tb_member tm,tb_user tu, tb_task_sub tts2 
        where ttm.task_id in (
        select ttm.task_id 
        from tb_task_manager ttm
        where ttm.member_no in (select member_no from tb_member where user_id=#{id})
        )
        and ttm.task_id = tts2.task_id 
        and ttm.member_no = tm.member_no
        and tm.user_id = tu.id
        group by ttm.task_id
        )
        AS b
        ON a.cId = b.cId
        order by a.state='e' desc
    ]]>
   </select>
</mapper>