<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dashboard">
    <select id="getTodayList" parameterType="String" resultType="dashboarddto">
    <![CDATA[
   SELECT a.prjId, a.prjTitle, a.pTitle, a.cTitle, a.start_date, a.end_date, a.reg_date, a.state, a.use_public, b.manager_count, b.manager_name, b.img
        FROM 
        (
            select tp.id prjId, tts.task_id cId, tp.title prjTitle, ttsp.title pTitle, tts.title cTitle, tts.start_date, tts.end_date, tts.reg_date, tts.state, tts.use_public
            from tb_task_sub tts, tb_task_super ttsp, tb_project tp
            where (tts.task_super_id = ttsp.task_id) and (ttsp.project_id = tp.id) 
            and (current_date::varchar between tts.start_date and tts.end_date)
            and (tts.task_id in (
                select tts.task_id from tb_task_sub tts 
                where tts.task_super_id in (
                        select ttsp.task_id from tb_task_super ttsp where ttsp.project_id in (
                        select tp.id from tb_project tp where tp.id in (select project_id from tb_member  where user_id=#{userId})))))
        )
        AS a left outer join
        (
            select ttm.task_id cId ,  count(tu."name") as manager_count, array_to_string(array_agg(tu."name"),',') as manager_name, array_to_string(array_agg(tu.img_code ),',') as img
            from tb_task_manager ttm, tb_member tm,tb_user tu, tb_task_sub tts2 
            where ttm.task_id in (
            select ttm.task_id 
            from tb_task_manager ttm
            where ttm.member_no in (select member_no from tb_member where user_id=#{userId})
            )
            and ttm.task_id = tts2.task_id 
            and ttm.member_no = tm.member_no
            and tm.user_id = tu.id
            group by ttm.task_id
        )
        AS b
        ON a.cId = b.cId
        order by a.state='e' desc
    ]]>
    </select>
    <select id="getWeekList" parameterType="String" resultType="dashboarddto">
    <![CDATA[
        SELECT a.prjId, a.prjTitle, a.pTitle, a.cTitle, a.start_date, a.end_date, a.reg_date, a.state, a.use_public, b.manager_count, b.manager_name, b.img
        FROM 
        (
        select tp.id prjId, tts.task_id cId, tp.title prjTitle, ttsp.title pTitle, tts.title cTitle, tts.start_date, tts.end_date, tts.reg_date, tts.state, tts.use_public
        from tb_task_sub tts, tb_task_super ttsp, tb_project tp
        where (tts.task_super_id = ttsp.task_id) and (ttsp.project_id = tp.id) 
        and (((date_trunc('week',current_date)::date) between tts.start_date::date and tts.end_date::date) or ((date_trunc('week',current_date)::date+6) between tts.start_date::date and tts.end_date::date))
        and (tts.task_id in (
            select tts.task_id from tb_task_sub tts 
            where tts.task_super_id in (
                    select ttsp.task_id from tb_task_super ttsp where ttsp.project_id in (
                    select tp.id from tb_project tp where tp.id in (select project_id from tb_member  where user_id=#{userId})))))
        )
        AS a left outer join
        (
        select ttm.task_id cId ,  count(tu."name") as manager_count, array_to_string(array_agg(tu."name"),',') as manager_name, array_to_string(array_agg(tu.img_code ),',') as img
        from tb_task_manager ttm, tb_member tm,tb_user tu, tb_task_sub tts2 
        where ttm.task_id in (
        select ttm.task_id 
        from tb_task_manager ttm
        where ttm.member_no in (select member_no from tb_member where user_id=#{userId})
        )
        and ttm.task_id = tts2.task_id 
        and ttm.member_no = tm.member_no
        and tm.user_id = tu.id
        group by ttm.task_id
        )
        AS b
        ON a.cId = b.cId
        order by a.state='e' desc
    ]]>
    </select>

    <select id="getStarredList" parameterType="String" resultType="dashboarddto">
    <![CDATA[
        SELECT a.prjId, a.prjTitle, a.pTitle, a.cTitle, a.start_date, a.end_date, a.reg_date, a.state, a.use_public, b.manager_count, b.manager_name, b.img
        FROM 
        (
        select tp.id prjId, tts.task_id cId, tp.title prjTitle, ttsp.title pTitle, tts.title cTitle, tts.start_date, tts.end_date, tts.reg_date, tts.state, tts.use_public
        from tb_task_sub tts, tb_task_super ttsp, tb_project tp
        where (tts.task_super_id = ttsp.task_id) and (ttsp.project_id = tp.id) 
        and (((date_trunc('week',current_date)::date)::varchar between tts.start_date and tts.end_date) or ((date_trunc('week',current_date)::date+6)::varchar between tts.start_date and tts.end_date))
        and (tts.task_id in (
            select tts.task_id from tb_task_sub tts 
            where tts.task_super_id in (
                    select ttsp.task_id from tb_task_super ttsp where ttsp.project_id in (
                    select tp.id from tb_project tp where tp.id in (select project_id from tb_member  where user_id=#{userId})))))
        )
        AS a left outer join
        (
        select ttm.task_id cId ,  count(tu."name") as manager_count, array_to_string(array_agg(tu."name"),',') as manager_name, array_to_string(array_agg(tu.img_code ),',') as img
        from tb_task_manager ttm, tb_member tm,tb_user tu, tb_task_sub tts2 
        where ttm.task_id in (
        select ttm.task_id 
        from tb_task_manager ttm
        where ttm.member_no in (select member_no from tb_member where user_id=#{userId})
        )
        and ttm.task_id = tts2.task_id 
        and ttm.member_no = tm.member_no
        and tm.user_id = tu.id
        group by ttm.task_id
        )
        AS b
        ON a.cId = b.cId
        order by a.state='e' desc
    ]]>
    </select>

</mapper>